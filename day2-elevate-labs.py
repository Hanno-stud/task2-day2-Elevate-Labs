# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11KssEyCth4mgZTTP-EpRN5xQxq7uLR7R
"""

# 📦 Import libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px

# 📤 Upload the cleaned Titanic dataset
from google.colab import files
uploaded = files.upload()

# 📄 Load the dataset
df = pd.read_csv('Titanic-Dataset.csv')  # Replace with your file name if needed
df.head()

# 📊 Summary statistics
print(df.describe())

# 🔢 Value counts
print("Survival count:\n", df['Survived'].value_counts())
print("Class distribution:\n", df['Pclass'].value_counts())
print("Gender distribution:\n", df['Sex'].value_counts())

# 📈 Histograms of numeric columns
numeric_cols = ['Age', 'Fare']
for col in numeric_cols:
    plt.figure(figsize=(6, 4))
    sns.histplot(df[col], kde=True, bins=30)
    plt.title(f'Distribution of {col}')
    plt.xlabel(col)
    plt.ylabel('Count')
    plt.show()

# 📦 Boxplots for outliers
for col in numeric_cols:
    plt.figure(figsize=(6, 4))
    sns.boxplot(x=df[col])
    plt.title(f'Boxplot of {col}')
    plt.show()

# 🔗 Correlation Matrix
plt.figure(figsize=(10, 6))
numeric_df = df.select_dtypes(include=[np.number])  # Avoid non-numeric columns
sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Matrix')
plt.show()

# 📊 Pairplot (to study relationships)
sns.pairplot(df[['Survived', 'Age', 'Fare', 'Pclass']], hue='Survived', diag_kind='kde')
plt.show()

# 🧑‍🤝‍🧑 Survival by Gender
sns.countplot(x='Sex', hue='Survived', data=df)
plt.title('Survival Count by Sex')
plt.xlabel('Sex')
plt.ylabel('Count')
plt.show()

# 💼 Survival by Class
sns.countplot(x='Pclass', hue='Survived', data=df)
plt.title('Survival Count by Pclass')
plt.xlabel('Passenger Class')
plt.ylabel('Count')
plt.show()

# 🧠 Interactive Plot: Fare vs Age colored by Survival
fig = px.scatter(df, x='Age', y='Fare', color='Survived',
                 hover_data=['Sex', 'Pclass'], title='Fare vs Age (Survival)')
fig.show()